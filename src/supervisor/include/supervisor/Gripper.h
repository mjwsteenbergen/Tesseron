// Generated by gencpp from file supervisor/Gripper.msg
// DO NOT EDIT!


#ifndef SUPERVISOR_MESSAGE_GRIPPER_H
#define SUPERVISOR_MESSAGE_GRIPPER_H

#include <ros/service_traits.h>


#include <supervisor/GripperRequest.h>
#include <supervisor/GripperResponse.h>


namespace supervisor
{

struct Gripper
{

typedef GripperRequest Request;
typedef GripperResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Gripper
} // namespace supervisor


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::supervisor::Gripper > {
  static const char* value()
  {
    return "e6e865a8e83cc84fa1ea3e028f496ffb";
  }

  static const char* value(const ::supervisor::Gripper&) { return value(); }
};

template<>
struct DataType< ::supervisor::Gripper > {
  static const char* value()
  {
    return "supervisor/Gripper";
  }

  static const char* value(const ::supervisor::Gripper&) { return value(); }
};


// service_traits::MD5Sum< ::supervisor::GripperRequest> should match 
// service_traits::MD5Sum< ::supervisor::Gripper > 
template<>
struct MD5Sum< ::supervisor::GripperRequest>
{
  static const char* value()
  {
    return MD5Sum< ::supervisor::Gripper >::value();
  }
  static const char* value(const ::supervisor::GripperRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::supervisor::GripperRequest> should match 
// service_traits::DataType< ::supervisor::Gripper > 
template<>
struct DataType< ::supervisor::GripperRequest>
{
  static const char* value()
  {
    return DataType< ::supervisor::Gripper >::value();
  }
  static const char* value(const ::supervisor::GripperRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::supervisor::GripperResponse> should match 
// service_traits::MD5Sum< ::supervisor::Gripper > 
template<>
struct MD5Sum< ::supervisor::GripperResponse>
{
  static const char* value()
  {
    return MD5Sum< ::supervisor::Gripper >::value();
  }
  static const char* value(const ::supervisor::GripperResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::supervisor::GripperResponse> should match 
// service_traits::DataType< ::supervisor::Gripper > 
template<>
struct DataType< ::supervisor::GripperResponse>
{
  static const char* value()
  {
    return DataType< ::supervisor::Gripper >::value();
  }
  static const char* value(const ::supervisor::GripperResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SUPERVISOR_MESSAGE_GRIPPER_H
