// Generated by gencpp from file supervisor/LayDown.msg
// DO NOT EDIT!


#ifndef SUPERVISOR_MESSAGE_LAYDOWN_H
#define SUPERVISOR_MESSAGE_LAYDOWN_H

#include <ros/service_traits.h>


#include <supervisor/LayDownRequest.h>
#include <supervisor/LayDownResponse.h>


namespace supervisor
{

struct LayDown
{

typedef LayDownRequest Request;
typedef LayDownResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct LayDown
} // namespace supervisor


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::supervisor::LayDown > {
  static const char* value()
  {
    return "52707f1aa79bcb694bdb48d3cc3420b7";
  }

  static const char* value(const ::supervisor::LayDown&) { return value(); }
};

template<>
struct DataType< ::supervisor::LayDown > {
  static const char* value()
  {
    return "supervisor/LayDown";
  }

  static const char* value(const ::supervisor::LayDown&) { return value(); }
};


// service_traits::MD5Sum< ::supervisor::LayDownRequest> should match 
// service_traits::MD5Sum< ::supervisor::LayDown > 
template<>
struct MD5Sum< ::supervisor::LayDownRequest>
{
  static const char* value()
  {
    return MD5Sum< ::supervisor::LayDown >::value();
  }
  static const char* value(const ::supervisor::LayDownRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::supervisor::LayDownRequest> should match 
// service_traits::DataType< ::supervisor::LayDown > 
template<>
struct DataType< ::supervisor::LayDownRequest>
{
  static const char* value()
  {
    return DataType< ::supervisor::LayDown >::value();
  }
  static const char* value(const ::supervisor::LayDownRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::supervisor::LayDownResponse> should match 
// service_traits::MD5Sum< ::supervisor::LayDown > 
template<>
struct MD5Sum< ::supervisor::LayDownResponse>
{
  static const char* value()
  {
    return MD5Sum< ::supervisor::LayDown >::value();
  }
  static const char* value(const ::supervisor::LayDownResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::supervisor::LayDownResponse> should match 
// service_traits::DataType< ::supervisor::LayDown > 
template<>
struct DataType< ::supervisor::LayDownResponse>
{
  static const char* value()
  {
    return DataType< ::supervisor::LayDown >::value();
  }
  static const char* value(const ::supervisor::LayDownResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SUPERVISOR_MESSAGE_LAYDOWN_H
